service: quizTopia
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  profile: studentNH
  region: eu-north-1
  iam:
    role: arn:aws:iam::084413454721:role/awsUsingServerless-dev-eu-north-1-lambdaRole


plugins:
  - serverless-webpack



package:
  individually: true




functions:
  getQuiz:
    handler: functions/getQuiz/index.handler
    events:
      - httpApi:
          path: '/api/quiz'
          method: GET 
  postQuiz:
    handler: functions/postQuiz/index.handler
    events:
      - httpApi:
          path: '/api/quiz'
          method: POST
  deleteQuiz:
    handler: functions/deleteQuiz/index.handler
    events:
      - httpApi:
          path: '/api/quiz/{quizId}'
          method: DELETE            
  createAccount: 
    handler: functions/createAccount/index.handler
    events:
      - httpApi:
          path: '/api/createAccount'
          method: POST
  login:
    handler: functions/login/index.handler
    events:
      - httpApi:
          path: '/api/login'
          method: POST
  postQuestion:
    handler: functions/createQuestion/index.handler
    events:
      - httpApi:
          path: '/api/quiz/question'
          method: POST  
  getQuizById:
    handler: functions/getSpecificQuiz/index.handler # Update the path to your Lambda function
    events:
      - httpApi:
          path: '/api/quiz/{quizId}'
          method: GET
    environment:
      QUIZ_DB_TABLE: 'quiz-db' 
      QUESTIONS_DB_TABLE: 'questions-db' 
                






resources:
  Resources:
    quizDb:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: quiz-db
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    jwtAccounts:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: accounts
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    createAccountDb: # Add the DynamoDB table for createAccount
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: create-account
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST        
   